// Mocks generated by Mockito 5.4.5 from annotations
// in movies_test/test/app/presentation/controllers/home_controller_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:ui' as _i14;

import 'package:flutter/material.dart' as _i12;
import 'package:get/get.dart' as _i4;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i10;
import 'package:movies_test/app/core/services/alerts_service.dart' as _i8;
import 'package:movies_test/app/core/services/preferences_service.dart' as _i9;
import 'package:movies_test/app/core/theme/theme_controller.dart' as _i11;
import 'package:movies_test/app/domain/entities/paginated_response_entity.dart'
    as _i3;
import 'package:movies_test/app/domain/repositories/movie_repository.dart'
    as _i2;
import 'package:movies_test/app/domain/usecases/get_movie_genres.dart' as _i7;
import 'package:movies_test/app/domain/usecases/get_popular_movies.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeMovieRepository_0 extends _i1.SmartFake
    implements _i2.MovieRepository {
  _FakeMovieRepository_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakePaginatedResponseEntity_1 extends _i1.SmartFake
    implements _i3.PaginatedResponseEntity {
  _FakePaginatedResponseEntity_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeRxBool_2 extends _i1.SmartFake implements _i4.RxBool {
  _FakeRxBool_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInternalFinalCallback_3<T> extends _i1.SmartFake
    implements _i4.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i5.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i6.Future<_i3.PaginatedResponseEntity> call({required int? page}) =>
      (super.noSuchMethod(
            Invocation.method(#call, [], {#page: page}),
            returnValue: _i6.Future<_i3.PaginatedResponseEntity>.value(
              _FakePaginatedResponseEntity_1(
                this,
                Invocation.method(#call, [], {#page: page}),
              ),
            ),
          )
          as _i6.Future<_i3.PaginatedResponseEntity>);
}

/// A class which mocks [GetMovieGenres].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieGenres extends _i1.Mock implements _i7.GetMovieGenres {
  MockGetMovieGenres() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_0(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i2.MovieRepository);

  @override
  _i6.Future<Map<int, String>> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i6.Future<Map<int, String>>.value(<int, String>{}),
          )
          as _i6.Future<Map<int, String>>);
}

/// A class which mocks [AlertsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAlertsService extends _i1.Mock implements _i8.AlertsService {
  MockAlertsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void showErrorMessage(String? title, String? message) => super.noSuchMethod(
    Invocation.method(#showErrorMessage, [title, message]),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [PreferencesService].
///
/// See the documentation for Mockito's code generation for more information.
class MockPreferencesService extends _i1.Mock
    implements _i9.PreferencesService {
  MockPreferencesService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.Future<void> saveTheme(bool? isDarkMode) =>
      (super.noSuchMethod(
            Invocation.method(#saveTheme, [isDarkMode]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<bool> getTheme() =>
      (super.noSuchMethod(
            Invocation.method(#getTheme, []),
            returnValue: _i6.Future<bool>.value(false),
          )
          as _i6.Future<bool>);

  @override
  _i6.Future<void> saveLanguage(String? languageCode) =>
      (super.noSuchMethod(
            Invocation.method(#saveLanguage, [languageCode]),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<String> getLanguage() =>
      (super.noSuchMethod(
            Invocation.method(#getLanguage, []),
            returnValue: _i6.Future<String>.value(
              _i10.dummyValue<String>(
                this,
                Invocation.method(#getLanguage, []),
              ),
            ),
          )
          as _i6.Future<String>);
}

/// A class which mocks [ThemeController].
///
/// See the documentation for Mockito's code generation for more information.
class MockThemeController extends _i1.Mock implements _i11.ThemeController {
  MockThemeController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.RxBool get isDarkMode =>
      (super.noSuchMethod(
            Invocation.getter(#isDarkMode),
            returnValue: _FakeRxBool_2(this, Invocation.getter(#isDarkMode)),
          )
          as _i4.RxBool);

  @override
  _i12.ThemeMode get themeMode =>
      (super.noSuchMethod(
            Invocation.getter(#themeMode),
            returnValue: _i12.ThemeMode.system,
          )
          as _i12.ThemeMode);

  @override
  _i4.InternalFinalCallback<void> get onStart =>
      (super.noSuchMethod(
            Invocation.getter(#onStart),
            returnValue: _FakeInternalFinalCallback_3<void>(
              this,
              Invocation.getter(#onStart),
            ),
          )
          as _i4.InternalFinalCallback<void>);

  @override
  _i4.InternalFinalCallback<void> get onDelete =>
      (super.noSuchMethod(
            Invocation.getter(#onDelete),
            returnValue: _FakeInternalFinalCallback_3<void>(
              this,
              Invocation.getter(#onDelete),
            ),
          )
          as _i4.InternalFinalCallback<void>);

  @override
  bool get initialized =>
      (super.noSuchMethod(Invocation.getter(#initialized), returnValue: false)
          as bool);

  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);

  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);

  @override
  int get listeners =>
      (super.noSuchMethod(Invocation.getter(#listeners), returnValue: 0)
          as int);

  @override
  void onInit() => super.noSuchMethod(
    Invocation.method(#onInit, []),
    returnValueForMissingStub: null,
  );

  @override
  _i6.Future<void> loadTheme() =>
      (super.noSuchMethod(
            Invocation.method(#loadTheme, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  _i6.Future<void> toggleTheme() =>
      (super.noSuchMethod(
            Invocation.method(#toggleTheme, []),
            returnValue: _i6.Future<void>.value(),
            returnValueForMissingStub: _i6.Future<void>.value(),
          )
          as _i6.Future<void>);

  @override
  void update([List<Object>? ids, bool? condition = true]) =>
      super.noSuchMethod(
        Invocation.method(#update, [ids, condition]),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
    Invocation.method(#onReady, []),
    returnValueForMissingStub: null,
  );

  @override
  void onClose() => super.noSuchMethod(
    Invocation.method(#onClose, []),
    returnValueForMissingStub: null,
  );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
    Invocation.method(#$configureLifeCycle, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Disposer addListener(_i13.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListener, [listener]),
            returnValue: () {},
          )
          as _i13.Disposer);

  @override
  void removeListener(_i14.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );

  @override
  void refresh() => super.noSuchMethod(
    Invocation.method(#refresh, []),
    returnValueForMissingStub: null,
  );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
    Invocation.method(#refreshGroup, [id]),
    returnValueForMissingStub: null,
  );

  @override
  void notifyChildrens() => super.noSuchMethod(
    Invocation.method(#notifyChildrens, []),
    returnValueForMissingStub: null,
  );

  @override
  void removeListenerId(Object? id, _i14.VoidCallback? listener) =>
      super.noSuchMethod(
        Invocation.method(#removeListenerId, [id, listener]),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );

  @override
  _i13.Disposer addListenerId(Object? key, _i13.GetStateUpdate? listener) =>
      (super.noSuchMethod(
            Invocation.method(#addListenerId, [key, listener]),
            returnValue: () {},
          )
          as _i13.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
    Invocation.method(#disposeId, [id]),
    returnValueForMissingStub: null,
  );
}
